name: Build MicroPython Firmware

on:
  workflow_dispatch:
    inputs:
      scriptPath:
        description: 'Path to the Python script folder'
        required: true
        default: 'scripts'
      board:
        description: 'Target board'
        required: true
        default: 'GENERIC'
        type: choice
        options:
          - GENERIC
          - ESP32S3
          - ESP32C3
          - STM32F4DISC
          - GENERIC_S2
          - GENERIC_S3
          - GENERIC_WROOM
          - GENERIC_WROVER
          - GENERIC_S3_MINI
          - GENERIC_S3_MINI_I
          - GENERIC_S3_MINI_WROVER
          - GENERIC_S3_MINI_WROVER_I
          - GENERIC_S3_MINI_WROOM
          - GENERIC_S3_MINI_WROOM_I

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git wget libncurses-dev flex bison gperf python3-pip python3-setuptools python3-serial python3-click python3-cryptography python3-future python3-pyparsing python3-pyelftools cmake ninja-build ccache libffi-dev libssl-dev

      - name: Clone and setup ESP-IDF (if needed)
        if: contains(${{ github.event.inputs.board }}, 'ESP32') || contains(${{ github.event.inputs.board }}, 'GENERIC')
        run: |
          git clone --branch v5.1.2 https://github.com/espressif/esp-idf.git
          cd esp-idf
          git submodule update --init --recursive
          ./install.sh
          source export.sh

      - name: Clone MicroPython
        run: |
          git clone https://github.com/micropython/micropython.git
          cd micropython
          git submodule update --init --recursive

      - name: Copy custom scripts
        run: |
          mkdir -p micropython/ports/esp32/modules
          cp -r ${{ github.event.inputs.scriptPath }}/* micropython/ports/esp32/modules/

      - name: Build MicroPython Firmware
        run: |
          cd micropython/mpy-cross
          make
          cd ../ports/esp32
          make submodules
          make BOARD=${{ github.event.inputs.board }}

      - name: Upload Firmware
        uses: actions/upload-artifact@v3
        with:
          name: MicroPython Firmware
          path: micropython/ports/esp32/build-${{ github.event.inputs.board }}/*
